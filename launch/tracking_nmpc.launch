<launch>
    <rosparam file="$(find mpc_casadi)/params/vast_constraints.yaml" command="load" />

    <node name="rvizualizer" pkg="rviz" type="rviz" args="-d $(find mpc_casadi)/rviz.rviz"/>

    <node name="ctrl_joy" pkg="mpc_casadi" type="jackal_joy_controller.py" output="screen"/>
    <node name="joy_ros" pkg="joy" type="joy_node">
        <param name="/dev" value="/dev/input/js0"/>
    </node>

    <arg name="map_name" default="map1"/>

    <!-- Load Vast Fake robot -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- <arg name="world_name" value="$(find gazebo_ros)/worlds/empty.world"/> -->
        <arg name="world_name" value="$(find mpc_casadi)/simulation_setup/worlds/$(arg map_name)/map.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <arg name="target_ns" default="turtlebot3"/>
    <arg name="agent_ns" default="jackal"/>

    <group ns="$(arg target_ns)">
        <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
        <arg name="x" default="0.0"/>
        <arg name="y" default="0.0"/>
        <arg name="z" default="0.0"/>
        <arg name="yaw" default="0.0"/>

        <param name="robot_description" command="$(find xacro)/xacro $(find mpc_casadi)/simulation_setup/robots/turtlebot3/urdf/turtlebot3_$(arg model).urdf.xacro" />
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" 
            args="-urdf -model turtlebot3_$(arg model) -x $(arg x) -y $(arg y) -z $(arg z) -R 0 -P 0 -Y $(arg yaw) -param robot_description" />
    </group>

    <group ns="$(arg agent_ns)">
        <rosparam file="$(find mpc_casadi)/simulation_setup/robots/jackal/configs/jackal_params.yaml" />
        <rosparam file="$(find mpc_casadi)/simulation_setup/robots/jackal/configs/jackal_control.yaml" />
        <arg name="x" default="1.0"/>
        <arg name="y" default="1.0"/>
        <arg name="z" default="0.05"/>
        <arg name="yaw" default="0.0"/>

        <param name="robot_description" command="$(find xacro)/xacro $(find mpc_casadi)/simulation_setup/robots/jackal/urdf/jackal.urdf.xacro" />
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" 
            args="-urdf -model jackal -x $(arg x) -y $(arg y) -z $(arg z) -R 0 -P 0 -Y $(arg yaw) -param robot_description" />
        <!-- controller -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_publisher velocity_controller"/>
        <node name="odom_pub" pkg="tracking_mpc" type="odom.py"/>
        
        <!--  publish the state of a robot to tf2 -->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0" />
        </node>
        
    </group>

    <!-- load VAST robot in Gazebo -->
    <!-- <include file="$(find vast_gazebo)/launch/robot.launch" />
    <node pkg="vast_fake" name="odom_path_node" type="odom_path_node">
        <param name="length_path"       type="int"      value="-1" />
    </node> -->

    <!-- Trajectory -->
    <node pkg="mpc_casadi" type="trajectory.py" name="trajectory" output="screen"/>

    <!-- Controller -->
    <node pkg="mpc_casadi" type="nmpc_node.py" name="nmpc_node" output="screen" >
        <param name="path_topic"  type="string"   value="/path" />
    </node>

    <!-- Plotting -->
    <!-- <node pkg="mpc_casadi" type="plot_tracking.py" name="plotting" output="screen" /> -->
</launch>
